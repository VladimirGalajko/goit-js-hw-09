{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,SAOtB,SAAoBC,GAClBC,EAAQC,OAAOF,EAAEG,cAAcC,MAAMC,OACrCC,EAAOJ,OAAOF,EAAEG,cAAcI,KAAKF,OACnCG,EAASN,OAAOF,EAAEG,cAAcM,OAAOJ,M,IATzCT,EAAKG,iBAAiB,UAYtB,SAAqBC,GACnBA,EAAEU,iBAIJ,SAAmBC,GACjB,IAAK,IAAIC,EAAW,EAAGD,GAAUC,EAAUA,IACzCC,EAAcD,EAAUX,GACrBa,MAAK,SAAAC,G,OAAOC,EAAQD,E,IACpBE,OAAM,SAAAF,G,OAAOG,EAAOH,E,IACvBd,GAASK,C,CARXa,CAAUX,E,IAXZ,IAAIP,EAAQ,KACRK,EAAO,KACPE,EAAS,KAqBb,SAASK,EAAcD,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEV,WAAUR,MAAAgB,IAEpBG,EAAO,CAAEX,WAAUR,MAAAgB,G,GAEpBA,E,IAIP,SAASJ,EAAQW,G,IAAEf,EAAFe,EAAEf,SAAUgB,EAAZD,EAAYvB,MAC3BoB,YAAW,WACT9B,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANH,EAAM,M,GAC5DA,E,CAGL,SAASV,EAAOS,G,IAACf,EAADe,EAACf,SAAUoB,EAAXL,EAAWvB,MACzBoB,YAAW,WACT9B,EAAAmC,OAAOI,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANC,EAAM,M,GACzDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\nform.addEventListener('input', checkInput);\nform.addEventListener('submit', checkSubmit);\n\n\nlet delay = null\nlet step = null\nlet amount = null\nfunction checkInput(e) {\n  delay = Number(e.currentTarget.delay.value);\n  step = Number(e.currentTarget.step.value);\n  amount = Number(e.currentTarget.amount.value);\n}\n\nfunction checkSubmit(e) {\n  e.preventDefault();\n  startShow(amount);\n}\n\nfunction startShow(amount) {\n  for (let position = 1; amount >= position; position++) { \n    createPromise(position, delay)\n      .then(obj => fulfill(obj))\n      .catch(obj => reject(obj))\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction fulfill({ position, delay }) {\n  setTimeout(() => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }, delay);\n}\n\nfunction reject({position, delay}){\n  setTimeout(() => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }, delay);\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","$ce04d3a99e08e73b$var$delay","Number","currentTarget","delay","value","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","preventDefault","amount1","position","$ce04d3a99e08e73b$var$createPromise","then","obj","$ce04d3a99e08e73b$var$fulfill","catch","$ce04d3a99e08e73b$var$reject","$ce04d3a99e08e73b$var$startShow","delay1","Promise","resolve","reject1","setTimeout","Math","random","param","delay2","Notify","success","concat","delay3","failure"],"version":3,"file":"03-promises.47647bef.js.map"}