{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,SAOtB,SAAoBC,GAClBC,EAAQC,OAAOF,EAAEG,cAAcC,MAAMC,OACrCC,EAAOJ,OAAOF,EAAEG,cAAcI,KAAKF,OACnCG,EAASN,OAAOF,EAAEG,cAAcM,OAAOJ,M,IATzCT,EAAKG,iBAAiB,UAYtB,SAAqBC,GACnBA,EAAEU,iBAIJ,SAAmBC,GACjB,IAAK,IAAIC,EAAW,EAAGD,GAAUC,EAAUA,IACzCC,EAAcD,EAAUX,GACrBa,MAAKC,GAAOC,EAAQD,KACpBE,OAAMF,GAAOG,EAAOH,KACvBd,GAASK,C,CARXa,CAAUX,E,IAXZ,IAAIP,EAAQ,KACRK,EAAO,KACPE,EAAS,KAqBb,SAASK,EAAcD,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEV,EAAUR,MAAAgB,IAEpBG,EAAO,C,SAAEX,EAAUR,MAAAgB,GAAQ,GAE5BA,EAAM,G,CAIb,SAASJ,GAAQJ,SAAEA,EAAUR,MAAAuB,IAC3BH,YAAW,KACT9B,EAAAkC,OAAOC,QAAQ,uBAAqBjB,QAAiBe,MAAU,GAC9DA,E,CAGL,SAAST,GAAON,SAACA,EAAUR,MAAA0B,IACzBN,YAAW,KACT9B,EAAAkC,OAAOG,QAAQ,sBAAoBnB,QAAekB,MAAU,GAC3DA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\nform.addEventListener('input', checkInput);\nform.addEventListener('submit', checkSubmit);\n\n\nlet delay = null\nlet step = null\nlet amount = null\nfunction checkInput(e) {\n  delay = Number(e.currentTarget.delay.value);\n  step = Number(e.currentTarget.step.value);\n  amount = Number(e.currentTarget.amount.value);\n}\n\nfunction checkSubmit(e) {\n  e.preventDefault();\n  startShow(amount);\n}\n\nfunction startShow(amount) {\n  for (let position = 1; amount >= position; position++) { \n    createPromise(position, delay)\n      .then(obj => fulfill(obj))\n      .catch(obj => reject(obj))\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction fulfill({ position, delay }) {\n  setTimeout(() => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }, delay);\n}\n\nfunction reject({position, delay}){\n  setTimeout(() => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }, delay);\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","$47d4ff9957288465$var$delay","Number","currentTarget","delay","value","$47d4ff9957288465$var$step","step","$47d4ff9957288465$var$amount","amount","preventDefault","amount1","position","$47d4ff9957288465$var$createPromise","then","obj","$47d4ff9957288465$var$fulfill","catch","$47d4ff9957288465$var$reject","$47d4ff9957288465$var$startShow","delay1","Promise","resolve","reject1","setTimeout","Math","random","delay2","Notify","success","delay3","failure"],"version":3,"file":"03-promises.2d1780c3.js.map"}