{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAwBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASO,EAAQC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC3BI,YAAW,WACTX,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,GAC5DA,E,CAGL,SAASY,EAAOJ,G,IAACT,EAADS,EAACT,SAAUC,EAAXQ,EAAWR,MACzBI,YAAW,WACTX,EAAAgB,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,GACzDA,E,CA7CLL,EAAKmB,iBAAiB,SAGtB,SAAoBC,GAClBf,MAAQgB,OAAOD,EAAEE,cAAcjB,MAAMkB,OACrCC,KAAOH,OAAOD,EAAEE,cAAcE,KAAKD,OACnCE,OAASJ,OAAOD,EAAEE,cAAcG,OAAOF,M,IALzCvB,EAAKmB,iBAAiB,UAQtB,SAAqBC,GACnBA,EAAEM,iBAIJ,SAAmBD,GACjB,IAAK,IAAIrB,EAAW,EAAGqB,GAAUrB,EAAUA,IACzCD,EAAcC,EAAUC,OACrBsB,MAAK,SAAAC,G,OAAOhB,EAAQgB,E,IACpBC,OAAM,SAAAD,G,OAAOX,EAAOW,E,IACvBvB,OAASmB,I,CARXM,CAAUL,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\nform.addEventListener('input', checkInput);\nform.addEventListener('submit', checkSubmit);\n\nfunction checkInput(e) {\n  delay = Number(e.currentTarget.delay.value);\n  step = Number(e.currentTarget.step.value);\n  amount = Number(e.currentTarget.amount.value);\n}\n\nfunction checkSubmit(e) {\n  e.preventDefault();\n  startShow(amount);\n}\n\nfunction startShow(amount) {\n  for (let position = 1; amount >= position; position++) { \n    createPromise(position, delay)\n      .then(obj => fulfill(obj))\n      .catch(obj => reject(obj))\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction fulfill({ position, delay }) {\n  setTimeout(() => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }, delay);\n}\n\nfunction reject({position, delay}){\n  setTimeout(() => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }, delay);\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject1","setTimeout","Math","random","$ce04d3a99e08e73b$var$fulfill","param","Notify","success","concat","$ce04d3a99e08e73b$var$reject","failure","addEventListener","e","Number","currentTarget","value","step","amount","preventDefault","then","obj","catch","$ce04d3a99e08e73b$var$startShow"],"version":3,"file":"03-promises.61b3f998.js.map"}